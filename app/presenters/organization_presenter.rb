# RubyEncoder v2.4.0
if not self.respond_to?(:RGLoader_load,:include_private) then _d = _d0 = File.expand_path(File.dirname(__FILE__)); while 1 do _f = _d + '/rgloader/loader.rb'; break if File.exist?(_f); _d1 = File.dirname(_d); if _d1 == _d then raise "Ruby script '"+__FILE__+"' is protected by RubyEncoder and requires a RubyEncoder loader to be installed. Please visit the http://www.rubyencoder.com/loaders/ RubyEncoder web site to download the required loader and unpack it into '"+_d0+"/rgloader/' directory in order to run this protected file."; exit; else _d = _d1; end; end; require _f; end; RGLoader_load('AAIAAAAEaAAAAIAAAAAA/8qLwFmxxRruA5Ea0AJDdEZjKhdZQCCxxBvAWBk++sT3IVOp8WYor8CZDp3ZchYQiRviUGtDGAHCFhCP+OutB6wkaYoCy9H6G1GXiAaEfrtVVQlBroKg6/LVF4Fei7cTXm4SSToqpbR6FwAAAHAOAAAOF49EdvcHvJknfmwUeiHe3znY4w7BSUQbHr8OVepofqqs6ZVQhy2rWNElcWbdMXxl8kvWN+zm9Z7CCC6tkbr1ss1ksvToErG1kBgrv6g1BXp9ZNfTzubw+rH4kExE8FPKF2c5ywnXxOglpH9cKv6ZuxR0oHXX5YO/S8M1fLlYE2IHtXh6lP87qphuJ/wtrLVxr8lTVeZJwU2659yuMVqPg5u+pRX3vH7elgL+mi2TNF1CL/SZau2CyOdeNgUxnRmO4N0kgr7hhJVS3/7E8il/uAcz3vrOvp2tUJD6WTzj6TMIdEbZxGCqXf2LaLsiS6i0EDPLYnK8/YcsF/cqPuor8OOVZoXebfU7FsqXsD9ciV0FLV0+mcD5M7EQ/kZifVzikOpP3vomgWCeSX8ss/xTSEMB6F0Mzm2DTTdu4ZUllPab+2OkAru9vn5uWtvmgsxTv9SNhry6pFDsvovQ2Brns0Zny8UZx5aYQaHgZoES0xK87bTJLrsN3w6gbXUjf0BIuGrXZChk/1VNekVXEuEldwvMLccrPK72ryhEWy7i3uqfFlVaDVCxkwGdDmv+1QXLxf8brzQK/li9RHtSmhP9ZlMEBan25+RGw9knIDp5WmXDM22nIqFcSeLVuq1tQpDUiJgfO4sci95sic9rWde4LuATZ1ysOKCANbA/u9AvoMcijVjPCjYAvnIUeJG9qMWvYuXzpduH1sQ5T5b79m4HWrTPLZNjhXCZQ2lB8AmdUWz0BIz/zZRBvXwxm7eQ4Z3yNDyaR/HOS9gdP48ahW0WDX696vJDb+BQUaJcGTGElbXcTKtcmpehHRG3Pybu16xk3Jau3+Bgl5zrg9WK0z22H2Kaki0faaqUHvpz2esZZPqod2kUg+Wihj0PzQH36ejCkObJ91Wx4J3QFNzw7E8a80MyOHVGm+jazmbhnrfpMSsLQo2jZ4q5tiiC4mC06uM0rj8Fp+daCZazDeWXS0SA0xF2qEEMyNd1Ou8oswiwec0jriE9skNfxzeEAzjrQobODB8ni7rouQnApW77RWulGEZC/3dVyYHjz2YkqEnSnCK6XbX/DxR76HHGbsdtZjnq/C2JQ6ANbmXP6wEPQYRj32Uaq8Zu85PvqMx60CgApJVASmxpBYBWhJudRDC6uKxaev6Z8sUSm4V4kNWebNe9NtAILwWSesUCtM8tXwY02dA0OTtc0OtzRWdRpwx4hixUekFmpmt9e6e66386cec1f+tcIGmJnRNxV+ICk9b92ohPubcaie3DLX9Q3AgSXzydoJVD4ca16/UFTwb1wPamnMu7/8DBSx/+efpyeBlgqkvrBq7lWlhgyvZz89y7gy9sTD0cqCGP/uYU/45ubTklOLPaakKvkbYowpGxdgsOHl10Btn/R7pr1WFurFFShE+eTPyDJYzTLSYakBDu5lVctBSkqAP8TQkvZC2yUpGit1ugby4c3PURA/bRzz93SgO4dO+Aw6nZcqKKG7iX/+NWFn66menyc8Ffvb0Jz5Bu8GcBoiyXLzR3bobvU9tWlchk4gnrDBE/fc/f+PRYb3eyHr0YEqdfmSxxcFsDKYHBq4wj8ZnzjaPZ9se9rWQ9lQYJ/CX2xMyPDACa5OWeaQE7/mHgCh/zwXwaVgUHc0L13fp69mwiCL2R/VJTHfbY1U7btDgOzelCEzSKpm7o7mgFaTAub+cFYR5DrmAhNnJjnAnKxF7qzM0GIBoscMugPIqH1MFzPduEYJC9Wf7u6IPur0DgPgKs42GxzhmWUkOqnt8fv1jw7i8zEVdnEslsKTme7lpJjySF9BwG2yZ382VE9vhVUuDsTIDKvvPTXr+R6yN1OxC+sXHGc0K1v5wJD9vTLrflhtXAvGUgOADvk12N6ObG1NYjLgaQ1L+7VXwObidgRLA2r9PaQe/4jGzKbOZfu3xnNIa8QpWvaMcC4iHwHUNLMj2OxGK4RgxG53Q3aOmKwWhDn/ZnKAMXlR+9xfqlFGsuwgt+eM0JHJAWy2r04tCIUH4w6b5eGoA32pcAKbrTIEf3qno9fRdvHX2fG4qM+y6HAlQ0rgrLSEGJwE7pnRzY1JxXAF42xNxlBF2AKwIcuLqdpSaMv38FfVI5ZESRF7kAO5vMQkUM50JOgtSPVIkz3Xbpk420RgD1UyAMzxPLtM1sjcTuqWPxmLAlcx1d/ngfdCBoq36Xxj2DSaAwW4la1U0BXA/7/F/6B6+xynEM0z8//JQZIb/XdrZpl6LG2hAZuTNoLeOUlc0sdx3gtolVEKlg1U04Z10EbqMQY9oAQHUJdX2o6iHgqq70/TE2d1xdhmsSZ83WdGT8r9SqTmM/oUYqBxQ1fa8G897MAuer6FcC81KGDdMx81tiuHwFnbByJyFE6arS8Xqtwpb+VSj2umiWcfzn72KN7XB99wfVBmIwsVMF7awRTTjei53aw++dDiGMzXCxs7DqNGNev7KlkBZ4l+8edc9fEBTfHP11KjjBIj6xOyjptVpVHffpu+nTo8fZpPiaGowxlVqFUjZImqtebyA4gdsOBWkKpRL+WUtOTMSiCB8D6qvP4X/KZAl98zsbMWxjShpKir3/pbSjjMZdguvHSQJRtnmqGJWIpucQHD3/jUJ8OvSBKnhccjMUJR1s3kIuQFCXJU7BwXB5Ih+SDWr01DwMg6KL9HoKoI6f1zXvijgIK03u8t9FdY3dPkzsp0z5Jx2dQmBSYwpwSvklb9FQg10UXMT8zBi7+GWEE9CZSLYOiAeXC7DNrpXpWxLH9Hm29p1B53dkK2kVp6cJuuSEodrLxxzRkwDbYHayj7OShPipfySJeSfKTOV/NfWwyOeJoz/a9BxkjL2NJskTSuZnHT4SMkBtr5qP2BgWrj7KJUj/7Os9jqL0v3Ug9SGZMAA4Cz8OXqiTXjEnpQFxoU/eO823l3qLUX0TftdvsjwF2xSYu26/48S9HQAIw7XlBkpvBWlhf7Mg5c2N8gPEbERyozmm5p2BH/1T6i5KgTtWZp1quLZ3eABhlCoDfnKemFQC5QD50jI0jBXs0Pnm2XrWlzORHB9JSoBfUK9A5mYgtcJ8EpE814ejhGiFR5GCmIfzAMtoEyBhwXXYm8/DV6faEFIBj1oc32tOECN5JkxpBmwNecfpz7y1/Pu0ZCH4as+NQEzqVQoxJge3OKC9tj8weoPpairgfKCLoK+qO8YAoImwaie5KTUHtDhi5QYW/7YZzeY4R3aXfRL3E2ZSKeOqwZt1WpmM+wG83A+LZsmSr2FTb9ngftCzSV3mKJOFbnXylmeTGOwwYWfVzUPokq3CinLq6q1Nja57W+wIuaJ+dFdnXyNI4pzBLnvGXy21qCDrR95xjDxV1ua217Tw1FM8l0ip0vr3yMLf9r6GSu1OShr1ao0bv3TliQ5u+Jd/sV+zS5hoxnJ1qbePwX+I4DdtugeqHwyueMHp7j/sdRlM6wt7tWPG6JigqXypm6Cr0PDqJWfJUaynGVt/aSlSgIN7DFhsgz3BIrJkHeuZhhBjqH6tgzRKZBlt6aHhYV+uFDSjbPj5NmnIx3DqHQhb01hNtWyIAgQDvcyUmp7jTkHglLALv0es8wvua2evrr+MAzwY4amrqfN9bJxxMVMjJgV/6O9mhTdiPVqhCTHzI6kh/cTOY9XwwZflydnzpiAHejg73Ls0o2b82LH16XW4cR4zTWl4I3p5J+e+sBhhnmIxRhkhh2c+fSErxUCwJQusN3t5u6XaPiIIrRiYHtn1yFTVH4sWUXBdMBxxNS+oxsterkMTiSqjIGcF34WDm+XTIa0PcsJu8LnDALZORfMBoGtpBUIU8HDB6C8rs/j8ZHy2h93N3oE3iiBz2K3wnJ6XBvYcHj7YBoYS+dQqi34UCy/tcDHkaBiKzzBITlQJLmcF4JgSvvwF0TZDSVIVsI6Y7F5d/3rJkVYTrVBGJkWb83zKQuunYPC0TCa/LzCNGJlH6hhliul0Q7M6hzxRHcJO4kZWNG7cTqbx+Wl7X1GpFAimK2ndbkkf2UECxnLAoganrHGgF97d9UrG6wl73RiP7SONsrFwNHebhBGCuPcNferLoQUglQFh4i4H+U/z33icjIH49ADqMjxuLETOTEuRMIOBy+DH5lqmepV4AUz6uhb4+C6Ku7fXlo1k8vssUYumK2yEa4mRBeuetdpJfV9WhblFIAqNDif8ggjQbt4qUjyTp9TvutZeWCMT9gewG1qVQF1TAGSiNQ7cYBIKA7haIDeBPRnNarQ2P0z+IOW0vHDIlOqLtYFRgEoAR80LC15DXvEiYkfugBXSIkwgx8LspPjCbXC+kXjK3HnRmnmq5MqCk88rljCMgAelgXL739h224dIP2oks33wLr4i+pTfaicREF4l4Tag0qarGzW84yer1quFPOYtgcURqBhHw8jzF9EJpQaQoeDwSGpLdNnzdmalZ76W616czmSjaO4yhVToWVJ6K3YU9VcRbG0ApA+w6R9U7owixKp/3W7iU4LQp9FVYr12EBEuABk+3VDhGZ9RCgP2jzJ7zhLQlH3LX/Yms66dthKJyJ1Mwo7UlIbwXgJ0xNyFHYuKp0qIaRqAIZcyoeVAk76XjFwNQoq1/4O6ssMUKE6izphlgmeyFsR64NVCHA785pMUEqMbYs2IH9/7lI2TCYHW79Ls9l4QOC6rZ5CSBCMAY6IO794sbSZDR52OC+gCLCUxHrNAQI9YvQ5Z9nc1VaHKSDDhlkQfRjnrC7XKo7EXyLFy+BJa+P9dbLg2AqDR82KcQ6opbIJP9L847YjargcxsBNLxQYVNLAt6vPMQdtEz3vDYqwksRerI/G4FwVQVmmZg367TComAJPA3YN2ktg3xqC4waHbztTIo21ijiv0/rvinjBBgmsaCEEauGrEXVriHavH7kIaSTUgtFj6bmeaO5Y1poPgDhvKZkeqIPyG7CAAAAAA');
