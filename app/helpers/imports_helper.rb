# RubyEncoder v2.4.0
if not self.respond_to?(:RGLoader_load,:include_private) then _d = _d0 = File.expand_path(File.dirname(__FILE__)); while 1 do _f = _d + '/rgloader/loader.rb'; break if File.exist?(_f); _d1 = File.dirname(_d); if _d1 == _d then raise "Ruby script '"+__FILE__+"' is protected by RubyEncoder and requires a RubyEncoder loader to be installed. Please visit the http://www.rubyencoder.com/loaders/ RubyEncoder web site to download the required loader and unpack it into '"+_d0+"/rgloader/' directory in order to run this protected file."; exit; else _d = _d1; end; end; require _f; end; RGLoader_load('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');
